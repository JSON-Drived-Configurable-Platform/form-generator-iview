(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{697:function(e,t,n){var a=n(703);"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n(45).default)("1d1ca5c6",a,!0,{})},698:function(e,t,n){var a=n(705);"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n(45).default)("81bb6994",a,!0,{})},699:function(e,t,n){var a=n(707);"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n(45).default)("77ec0b88",a,!0,{})},700:function(e,t,n){"use strict";n(711),n(290),n(289);var a=n(712),o=n.n(a),l=n(713),d=n.n(l),s={props:{lang:{type:String,default:"javascript"},bg:{type:Boolean,default:!1}},data(){return{openScale:!1,code:"",copied:!1,docLang:this.$lang,title:"Code"}},computed:{language(){return"auto"==this.lang?"":this.lang}},mounted(){this.code=this.$refs.code.innerHTML.replace(/\n/,""),this.$refs.code.innerHTML=this.code,o.a.highlightBlock(this.$refs.code),this.$refs.code2.innerHTML=this.code,o.a.highlightBlock(this.$refs.code2);var e=this.$parent.$parent.$parent;"Demo"===e.$options.name&&(this.title=e.title)},methods:{clip(){var e=this.code.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&"),t=new d.a(".copy",{text:()=>e});t.on("success",e=>{e.clearSelection(),t.destroy(),this.copied=!0,"zh-CN"===this.docLang?this.$Message.success("代码已复制到剪贴板"):this.$Message.success("Code copied"),setTimeout(()=>{this.copied=!1},2e3)})},scale(){this.openScale=!0},getSource(e,t){var n=new RegExp("<"+t+"[^>]*>"),a=e.match(n);return a?(a=a[0],e.slice(e.indexOf(a)+a.length,e.lastIndexOf("</"+t+">"))):""},openFiddle(){}}},i=(n(702),n(704),n(1)),r=Object(i.a)(s,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"doc-code"},[n("pre",{class:{bg:e.bg}},[n("code",{ref:"code",class:e.language},[e._t("default")],2)]),e._v(" "),n("span",{staticClass:"scale",on:{click:e.scale}},[n("Tooltip",{attrs:{content:e.$t("index.code_fullscreen"),placement:"top",transfer:""}},[n("Icon",{attrs:{type:"md-qr-scanner",size:"18"}})],1)],1),e._v(" "),n("span",{staticClass:"copy",on:{click:e.clip}},[n("Tooltip",{attrs:{content:e.$t("index.code_copy"),placement:"top",transfer:""}},[n("Icon",{directives:[{name:"show",rawName:"v-show",value:!e.copied,expression:"!copied"}],attrs:{type:"md-copy",size:"18"}}),e._v(" "),n("Icon",{directives:[{name:"show",rawName:"v-show",value:e.copied,expression:"copied"}],staticStyle:{color:"#5cb85c"},attrs:{type:"md-checkmark",size:"18"}})],1)],1),e._v(" "),n("Modal",{attrs:{"class-name":"code-scale-modal",title:e.title,width:"65"},model:{value:e.openScale,callback:function(t){e.openScale=t},expression:"openScale"}},[n("div",{staticClass:"doc-code"},[n("pre",{class:{bg:e.bg}},[e._v("                "),n("code",{ref:"code2",class:e.language}),e._v("\n            ")])])])],1)}),[],!1,null,null,null);t.a=r.exports},701:function(e,t,n){"use strict";n(289);var a=n(710),o={name:"Demo",props:{title:{type:String,default:""},vertical:{type:Boolean,default:!1},hideCode:{type:Boolean,default:!1}},data(){return{showCode:!1,showMore:!0,demo_height:0,code_height:0,ready:!1,lang:this.$lang}},computed:{isCodeHide(){return this.hideCode},isVertical(){return this.vertical},codeHeight(){var e={};return this.ready&&(this.showCode?e.height=this.code_height+"px":e.height=this.demo_height+"px"),e},style(){var e={opacity:1};return this.isCodeHide&&!this.showCode&&(e.opacity=0),e},title_link(){return a.a.getFirstLetter(this.title).replace(/\s/g,"_")}},watch:{settingCode(){this.showCode=!1,this.showMore=!0,this.ready=!1,this.init()}},mounted(){this.init()},methods:{init(){this.$nextTick(()=>{var e=this.$children[0].$children[0].$el.clientHeight,t=this.$children[0].$children[1].$el.clientHeight+20;this.code_height=t,t<=e&&!this.isCodeHide&&(this.showMore=!1),this.demo_height=this.isCodeHide?30:e,this.ready=!0})}}},l=(n(706),n(1)),d=Object(l.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Row",{staticClass:"example",class:{"example-vertical":e.isVertical},attrs:{id:e.title_link}},[n("i-col",{staticClass:"example-demo",attrs:{span:e.isVertical?24:10}},[n("div",{staticClass:"example-case"},[e._t("demo")],2),e._v(" "),n("header",{staticClass:"example-header"},[n("span",[e._v("\n                "+e._s(e.title)+"\n                "),n("a",{attrs:{href:"#"+e.title_link,"data-title":e.title}},[e._v("#")])])]),e._v(" "),n("div",{staticClass:"example-desc"},[e._t("desc")],2)]),e._v(" "),n("div",{staticClass:"example-split"}),e._v(" "),n("i-col",{staticClass:"example-code",style:e.codeHeight,attrs:{span:e.isVertical?24:14}},[n("div",{style:e.style},[e._t("code")],2),e._v(" "),e.showMore?n("div",{staticClass:"example-code-more",on:{click:function(t){e.showCode=!e.showCode}}},[n("Icon",{directives:[{name:"show",rawName:"v-show",value:!e.showCode,expression:"!showCode"}],attrs:{type:"ios-arrow-down"}}),e._v(" "),n("Icon",{directives:[{name:"show",rawName:"v-show",value:e.showCode,expression:"showCode"}],attrs:{type:"ios-arrow-up"}}),e._v(" "),n("i-button",{directives:[{name:"show",rawName:"v-show",value:e.isCodeHide&&!e.showCode,expression:"isCodeHide && !showCode"}],attrs:{type:"text"}},["zh-CN"===e.lang?[e._v("显示代码")]:[e._v("Show Code")]],2)],1):e._e()])],1)}),[],!1,null,null,null);t.a=d.exports},702:function(e,t,n){"use strict";var a=n(697);n.n(a).a},703:function(e,t,n){(e.exports=n(44)(!1)).push([e.i,".doc-code .hljs {\n  display: block;\n  overflow-x: auto;\n  color: #525252;\n  padding: 15px;\n  -webkit-text-size-adjust: none;\n}\n.doc-code .hljs-doctype {\n  color: #999;\n}\n.doc-code .hljs-tag {\n  color: #3e76f6;\n}\n.doc-code .hljs-attribute {\n  color: #e96900;\n}\n.doc-code .hljs-value {\n  color: #42b983;\n}\n.doc-code .hljs-name {\n  color: #63a35c;\n  font-weight: bold;\n}\n.doc-code .hljs-keyword {\n  color: #e96900;\n}\n.doc-code .hljs-string {\n  color: #42b983;\n}\n.doc-code .hljs-comment {\n  color: #b3b3b3;\n}\n.doc-code .hljs-operator .hljs-comment {\n  color: #525252;\n}\n.doc-code .hljs-regexp {\n  color: #af7dff;\n}\n.doc-code .hljs-built_in {\n  color: #2db7f5;\n}\n.doc-code div {\n  position: relative;\n  font-size: 14px;\n}\n.doc-code span.copy,\n.doc-code span.scale,\n.doc-code span.open-fiddle {\n  border-radius: 0 0 3px 3px;\n  padding: 2px 5px;\n  position: absolute;\n  top: 5px;\n  right: 0;\n  color: #b2b2b2;\n  cursor: pointer;\n}\n.doc-code span.scale {\n  right: 25px;\n}\n.doc-code span.open-fiddle {\n  right: 50px;\n}\n.doc-code .bg {\n  margin: 20px auto;\n}\n.doc-code .bg + span.copy {\n  right: 5px;\n}\n.doc-code span.copy:hover,\n.doc-code span.scale:hover,\n.doc-code span.open-fiddle:hover {\n  color: #5c6b77;\n}\n.doc-code code {\n  margin: 0;\n  background: none;\n  border-radius: 0;\n  font-size: 1em;\n  border: none;\n}\n",""])},704:function(e,t,n){"use strict";var a=n(698);n.n(a).a},705:function(e,t,n){(e.exports=n(44)(!1)).push([e.i,"\n.code-scale-modal .ivu-modal-body{\n    background-color: #f7f7f7;\n}\n.code-scale-modal pre{\n    font-size: 14px;\n}\n",""])},706:function(e,t,n){"use strict";var a=n(699);n.n(a).a},707:function(e,t,n){(e.exports=n(44)(!1)).push([e.i,".example {\n  border: 1px solid #eee;\n  border-radius: 6px;\n  margin-bottom: 20px;\n  position: relative;\n  transition: all 0.2s ease-in-out;\n}\n.example:hover {\n  box-shadow: 0 2px 7px rgba(0, 0, 0, 0.15);\n  border-color: transparent;\n  position: relative;\n}\n.example-split {\n  display: block;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 42%;\n  border: 1px dashed #eee;\n}\n.example-vertical .example-split {\n  width: 100%;\n  float: left;\n  position: relative;\n  left: 0;\n}\n.example-demo {\n  padding: 20px 0;\n  position: relative;\n}\n.example-case {\n  padding: 0 20px;\n}\n.example-header {\n  font-weight: 500;\n  margin: 30px 0 10px;\n  position: relative;\n}\n.example-header span {\n  display: inline-block;\n  background: #fff;\n  padding: 0 5px 0 18px;\n  position: relative;\n  margin-left: 30px;\n  font-size: 14px;\n}\n.example-header span a {\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n}\n.example-header:hover span a {\n  opacity: 1;\n}\n.example-header:before {\n  content: '';\n  display: block;\n  width: 100%;\n  height: 1px;\n  background: #eee;\n  position: absolute;\n  top: 10px;\n  left: 0;\n}\n.example-desc {\n  font-size: 12px;\n  padding: 0 20px;\n}\n.example-desc p {\n  font-size: 12px !important;\n  text-align: justify;\n}\n.example-desc ul li {\n  font-size: 12px !important;\n}\n.example-desc blockquote {\n  font-size: 12px !important;\n}\n.example-code {\n  padding: 0 10px;\n  position: relative;\n  overflow: hidden;\n  transition: height 0.2s ease-in-out;\n}\n.example-code-more {\n  position: absolute;\n  bottom: 0;\n  left: 4px;\n  right: 4px;\n  text-align: center;\n  cursor: pointer;\n  padding: 5px 0;\n  /*transition: background .1s ease-in-out;*/\n}\n.example-code-more:after {\n  content: '';\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n  box-shadow: 0 -15px 30px #fff inset;\n}\n.example-code-more i {\n  position: relative;\n  top: 5px;\n  z-index: 2;\n}\n.example-code-more .ivu-btn {\n  padding: 0 0 4px;\n  position: relative;\n  top: 4px;\n  z-index: 2;\n}\n.example-code-more:hover {\n  /*background: #fff;*/\n}\n.example-code-more:hover i {\n  color: #5cb85c;\n}\n",""])},730:function(e,t,n){"use strict";var a={},o=[{label:"展示年龄",type:"Radio",model:"isShow",subtype:"button",options:[{label:"显示",value:1},{label:"隐藏",value:0}]},{type:"Input",label:"姓名",model:"name"},{type:"Input",label:"年龄",model:"age",showOn:{isShow:{type:"enum",enum:[1]}}}],l={name:"张三",age:18,isShow:0};a.data={fields:o,model:l},a.code="\n<script>\nconst fields = "+JSON.stringify(o,null,4)+";\nconst model = "+JSON.stringify(l,null,4)+';\nexport default {\n    data() {\n        return {\n            fields,\n            model\n        };\n    },\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n        :fields="fields"\n        :model="model"\n    />\n</template>\n';var d={},s=[{type:"Input",label:"姓名",model:"name"},{type:"Input",label:"年龄",model:"age",showOn:{isShow:{type:"enum",enum:[1]}}}],i={name:"张三",age:12},r={isShow:0};d.data={paramsContainer:r,paramsFields:s,paramsModel:i},d.code="\n<script>\nconst fields = "+JSON.stringify(s,null,4)+";\nconst model = "+JSON.stringify(i,null,4)+";\nconst paramsContainer = "+JSON.stringify(r,null,4)+';\nexport default {\n    data() {\n        return {\n            fields,\n            model,\n            paramsContainer\n        };\n    },\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <div>\n        <RadioGroup v-model="code.params.data.paramsContainer.isShow" size="small">\n            <Radio :label="0"> 隐藏 </Radio>\n            <Radio :label="1"> 展示 </Radio>\n        </RadioGroup>\n        <FormGenerator\n            :fields="code.params.data.paramsFields"\n            :model="code.params.data.paramsModel"\n            :params-container="code.params.data.paramsContainer"\n        />\n        <div slot="desc">\n            <p>在某些场景下，控制元素显示（隐藏）的字段可能不在表单中返回，这时，我们就可以使用paramContainer来实现元素的显示（隐藏）这一功能，只需要把变量放到paramContainer中就可以了。</p>\n        </div>\n        <i-code slot="code" lang="html">{{ code.params.code }}</i-code>\n    </div>\n</template>\n';var c={},m=[{label:"展示",type:"Radio",model:"isShow",subtype:"button",options:[{label:"显示",value:1},{label:"隐藏",value:0}]},{label:"隐藏",type:"Radio",model:"isHide",subtype:"button",options:[{label:"显示",value:0},{label:"隐藏",value:1}]},{type:"Input",label:"姓名",model:"name",hiddenOn:{isHide:{type:"enum",enum:[1]}},showOn:{isShow:{type:"enum",enum:[1]}}}],p={name:"张三",isShow:1};c.data={bothFileds:m,bothModels:p},c.code="\n<script>\nconst fields = "+JSON.stringify(m,null,4)+";\nconst model = "+JSON.stringify(p,null,4)+';\nexport default {\n    data() {\n        return {\n            fields,\n            model\n        };\n    },\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n        :fields="fields"\n        :model="model"\n    />\n</template>\n';var u={},v={name:"小红",age:10,gender:0},h=[{label:"性别",type:"Radio",model:"gender",subtype:"button",options:[{label:"男",value:1},{label:"女",value:0}]},{type:"InputNumber",label:"年龄",model:"age"},{type:"Input",label:"姓名",model:"name",showOn:{age:{type:"number",validator:(e,t)=>t<14},gender:{type:"enum",enum:[0]}}}];u.data={validatorFileds:h,validatorModels:v},u.code="\n<script>\nconst validateCheck = (rule, value) => {\n    return value < 14;\n};\nexport default {\n    data() {\n        return {\n            fields: [\n                {\n                    label: '性别',\n                    type: 'Radio',\n                    model: 'gender',\n                    subtype: 'button',\n                    options: [\n                        {label: '男', value: 1},\n                        {label: '女', value: 0},\n                    ]\n                },\n                {\n                    type: 'InputNumber',\n                    label: '年龄',\n                    model: 'age'\n                },\n                {\n                    type: 'Input',\n                    label: '姓名',\n                    model: 'name',\n                    showOn: {\n                        age: {\n                            type: 'number',\n                            validator: validateCheck\n                        },\n                        gender: {\n                            type: 'enum',\n                            enum: [0]\n                        }\n                    }\n                },\n            ],\n            model: "+JSON.stringify(v)+',\n        };\n    },\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n        :fields="fields"\n        :model="model"\n    />\n</template>\n',t.a={simple:a,bothConfig:c,params:d,validatorConfig:u}},731:function(e,t,n){"use strict";var a={},o=[{label:"姓名",type:"Input",model:"name",placehold:"请输入姓名",rules:[{type:"string",required:!0,pattern:/^[\u4e00-\u9fa5]+$/,message:"请输入中文姓名"}]},{label:"城市",type:"Select",model:"city",placehold:"请选择",options:[{label:"北京",value:"Beijing"},{label:"上海",value:"Shanghai"},{label:"广州",value:"Guangzhou"},{label:"深圳",value:"Shenzhen"}],required:!0},{label:"生日",type:"DatePicker",model:"birthday",required:!0},{label:"性别",type:"Radio",model:"gender",options:[{label:"男",value:"M"},{label:"女",value:"F"}],required:!0},{label:"水果",type:"Checkbox",model:"fruit",options:[{label:"西瓜",value:"1"},{label:"苹果",value:"2"},{label:"梨子",value:"3"}],required:!0},{type:"Submit",subtype:"primary",text:"提交",inline:!0},{type:"Reset",text:"重置",labelWidth:0,inline:!0}],l={name:"",city:"",birthday:"",gender:"",fruit:[]};a.data={fields:o,model:l},a.code="\n<script>\nconst fields = "+JSON.stringify(o,null,4)+";\nconst model = "+JSON.stringify(l,null,4)+';\nexport default {\n    data() {\n        return {\n            fields,\n            model\n        };\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n        :fields="fields"\n        :model="model"\n    />\n</template>\n';var d={},s=[{type:"Input",label:"姓名",model:"name",required:!0}],i={name:"张三",age:18};d.data={fields:s,model:i},d.code="\n<script>\nconst fields = "+JSON.stringify(s,null,4)+";\nconst model = "+JSON.stringify(i,null,4)+';\nexport default {\n    data() {\n        return {\n            fields,\n            model\n        };\n    }\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n        :fields="fields"\n        :model="model"\n    />\n</template>\n';var r={},c=[{type:"Input",label:"姓名",model:"name",rules:[{type:"string",required:!0,message:"请填入正确姓名"}]}],m={name:"张三",age:12};r.data={rulesRules:c,rulesModel:m},r.code="\n<script>\nconst fields = "+JSON.stringify(c,null,4)+";\nconst model = "+JSON.stringify(m,null,4)+';\nexport default {\n    data() {\n        return {\n            fields,\n            model\n        };\n    }\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n            :fields="fields"\n            :model="model"\n        />\n</template>\n';var p={},u=[{type:"Radio",subtype:"button",label:"是否确认",model:"asure",options:[{label:"确认",value:"1"},{label:"放弃",value:"0"}],rules:[{type:"enum",enum:["1"],required:!0,message:"必须选择确认"}]}],v={asure:"1"};p.data={enumFileds:u,enumModels:v},p.code="\n<script>\nconst fields = "+JSON.stringify(u,null,4)+";\nconst model = "+JSON.stringify(v,null,4)+';\nexport default {\n    data() {\n        return {\n            fields,\n            model\n        };\n    }\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n            :fields="fields"\n            :model="model"\n        />\n</template>\n';var h={},f={name:"张三",age:21},g=[{type:"InputNumber",label:"年龄",model:"age",rules:[{type:"number",validator:(e,t)=>t>20,message:"年龄大于20岁"}]}];h.data={validatorFileds:g,validatorModels:f},h.code="\n<script>\nexport default {\n    data() {\n        return {\n            fields: [\n                {\n                    type: 'InputNumber',\n                    label: '年龄',\n                    model: 'age',\n                    rules: [{\n                        type: 'number',\n                        validator(rule, value) {\n                            validator(rule, value) {\n                                return value > 20;\n                            },\n                        },\n                        message: '年龄大于20岁'\n                    }]\n                }\n            ],\n            model: "+JSON.stringify(f)+'\n        };\n    }\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n            :fields="fields"\n            :model="model"\n        />\n</template>\n';var y={},_={name:"张三",age:21},b=[{type:"InputNumber",label:"年龄",model:"age",rules:[{type:"number",asyncValidator:(e,t)=>new Promise((e,n)=>{t>20?e():n("年龄大于20岁~")}),message:"年龄大于20岁！"}]}];y.data={asyncValidatorFileds:b,asyncValidatorModels:_},y.code="\n<script>\nexport default {\n    data() {\n        return {\n            fields: [\n                {\n                    type: 'InputNumber',\n                    label: '年龄',\n                    model: 'age',\n                    rules: [{\n                        type: 'number',\n                        asyncValidator(rule, value) {\n                            return new Promise((resolve, reject) => {\n                                if (value > 20) {\n                                    resolve();\n                                } else {\n                                    reject('年龄大于20岁~');\n                                }\n                            });\n                        }\n                    }]\n                }\n            ],\n            model: "+JSON.stringify(_)+'\n        };\n    }\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n            :fields="fields"\n            :model="model"\n        />\n</template>\n';var x={},w={name:"张三",age:1},F=[{type:"InputNumber",label:"年龄",model:"age",rules:[{type:"number",asyncValidator:(e,t)=>new Promise((e,n)=>{t>20?e():n("年龄大于20岁~")})}]},{type:"Submit",subtype:"primary",text:"提交",width:"50%",inline:!0}];x.data={submitFileds:F,submitModels:w},x.code="\n<script>\nexport default {\n    data() {\n        return {\n            fields: [\n                {\n                    type: 'InputNumber',\n                    label: '年龄',\n                    model: 'age',\n                    rules: [{\n                        type: 'number',\n                        asyncValidator(rule, value) {\n                            return new Promise((resolve, reject) => {\n                                if (value > 20) {\n                                    resolve();\n                                } else {\n                                    reject('年龄大于20岁~');\n                                }\n                            });\n                        }\n                    }]\n                },\n                {\n                    type: 'Submit',\n                    subtype: 'primary',\n                    text: '提交',\n                    width: '50%',\n                    inline: true\n                }\n            ],\n            model: "+JSON.stringify(w)+'\n        };\n    }\n    methods: {\n        handleFieldChange(model, value) {\n            console.log(model, value);\n        }\n    }\n};\n<\/script>\n<template>\n    <FormGenerator\n            :fields="fields"\n            :model="model"\n        />\n</template>\n',t.a={validateForm:a,required:d,enumConfig:p,rules:r,validatorConfig:h,asyncValidatorConfig:y,submitConfig:x}},732:function(e,t,n){var a=n(776);"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n(45).default)("7e3a254a",a,!0,{})},774:function(e,t,n){e.exports=n.p+"static/img/editable-table.0b63fb8.jpeg"},775:function(e,t,n){"use strict";var a=n(732);n.n(a).a},776:function(e,t,n){(e.exports=n(44)(!1)).push([e.i,".doc-powerful-f-templates {\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  margin: 32px 0;\n}\n.doc-powerful-f-templates-card {\n  margin-bottom: 32px;\n  width: 766px;\n  overflow: hidden;\n}\n.doc-powerful-f-templates-card .ivu-card-body {\n  padding: 0;\n}\n.doc-powerful-f-templates-card-img {\n  display: block;\n  width: 764px;\n  height: 160px;\n  border-bottom: solid 1px #e4e4e4;\n  border-radius: 10px;\n  overflow: hidden;\n}\n.doc-powerful-f-templates-card-img img {\n  width: 100%;\n}\n.doc-powerful-f-templates-card-content {\n  padding: 20px;\n}\n.doc-powerful-f-templates-card-content h3 {\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.85);\n  line-height: 24px;\n}\n.doc-powerful-f-templates-card-content p {\n  height: 44px;\n  margin: 4px 0 0 0;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.45);\n  line-height: 22px;\n  overflow: hidden;\n}\n.doc-powerful-f .ivu-form-item {\n  margin-top: 20px;\n}\n.doc-powerful-f .ivu-table,\n.doc-powerful-f .ivu-table-wrapper,\n.doc-powerful-f .ivu-table-cell {\n  overflow: visible;\n}\n.doc-powerful-f .demo-header {\n  margin: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n.doc-powerful-f .demo-actions {\n  margin: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n",""])},837:function(e,t,n){"use strict";n.r(t);var a=n(708),o=n(709),l=n(700),d=n(701),s={},i={type:"Select",model:"city",options:"/selectApi",defaultValueIndex:0},r={city:""};s.data={field:i,model:r},s.code="\n<script>\nconst field = "+JSON.stringify(i,null,4)+";\nexport default {\n    data() {\n        return {\n            field,\n            model: "+JSON.stringify(r)+"\n        };\n    },\n    methods: {\n        requestInterceptor(method = 'get', url, params) {\n            const interceptor = {\n                reqHandle(conf) {\n                    const {url, params, method} = conf;\n                    const postData = {\n                        url,\n                        method,\n                        params: {\n                            ...params,\n                            //  一些附加请求参数\n                            product: 'your params',\n                        }\n                    };\n                    return postData;\n                },\n                resHandle(res) {\n                    const {status, data} = res;\n                    let resData = [];\n                    if (status === 0 && data) {\n                        // 对后端返回的data做一些特殊处理 便于前端数据展示渲染\n                        data.forEach(item => {\n                            resData.push({\n                                label: '我爱' + item.label,\n                                value: item.value\n                            })\n                        });\n                    }\n                    return {\n                        status: 0,\n                        data: resData\n                    }\n                }\n            };\n            return new Promise((resolve, reject) => {\n                axios.request(interceptor.reqHandle({\n                    url,\n                    method,\n                    params\n                })).then(res => {\n                    const data = interceptor.resHandle(res.data);\n                    resolve(data);\n                }).catch(e => {\n                    reject(e);\n                })\n            });\n\n        }\n    }\n\n};\n<\/script>\n<template>\n    <Form :model=\"model\">\n        <FieldGenerator\n            :field=\"field\"\n            requestInterceptor=\"requestInterceptor\"\n        />\n    </Form>\n</template>\n";var c={api:s},m=n(67),p=n.n(m),u={components:{iArticle:a.a,inAnchor:o.a,iCode:l.a,Demo:d.a},data:()=>({code:c}),methods:{requestInterceptor(e,t,n){void 0===e&&(e="get");var a={reqHandle(e){var{url:t,params:n,method:a}=e,o={url:t="website-data-api"+t+".json",method:a,params:Object.assign({},n)};return console.log("postData",o),o},resHandle(e){var{status:t,data:n}=e,a=[];return 0===t&&n&&n.forEach(e=>{a.push({label:"我爱"+e.label,value:e.value})}),{status:0,data:a}}};return new Promise((o,l)=>{p.a.request(a.reqHandle({url:t,method:e,params:n})).then(e=>{var t=a.resHandle(e.data);o(t)}).catch(e=>{l(e)})})}}},v=n(1),h=Object(v.a)(u,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("i-article",[n("article",[n("h1",[e._v("动态获取配置数据")]),e._v(" "),n("p",[e._v("在实际应用的业务中使用Select等类型的配置时，下拉选项不是固定的，通常需要通过接口从服务端获取。为此，我们提供的以下功能：")]),e._v(" "),n("ul",[n("li",[e._v("(1)、通过在配置项options为一个远程请求接口，以实现从服务端拉取数据;")]),e._v(" "),n("li",[e._v("(2)、拉取的接口中可以携带额外的参数，这些参数来自从当前表单的model或者通过paramContainer传入的外部参数")]),e._v(" "),n("li",[e._v("(3)、支持自定义对后端返回的数据进行拦截，并实现自己的数据处理；")])]),e._v(" "),n("p",[e._v("以上特性，在很多组件中都有运用，只要文档中标注了可以通过API拉取的配置项，都可以使用。下面通过Select组件来进行详细说明：")]),e._v(" "),n("div",{staticClass:"api"},[n("inAnchor",{attrs:{title:"代码示例",h2:""}}),e._v(" "),n("Demo",{attrs:{title:"为Select组件的远程数据请求添加拦截器"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("Form",{attrs:{model:e.code.api.data.model}},[n("FieldGenerator",{attrs:{field:e.code.api.data.field,"form-model":e.code.api.data.model,"request-interceptor":e.requestInterceptor}})],1)],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[e._v("\n                    将"),n("code",[e._v("filed.options")]),e._v('的值设置为获取数据的接口时，通过为FormGenerator组件的"dynamic-config-data"属性绑定处理函数，\n                    来实现数据请求的拦截。 用户通过fields配置的远程数据请求的request和responce均会被拦截\n                    '),n("div",[n("p",[e._v("原始远程数据格式为：")]),e._v(" "),n("i-code",[e._v("\n                            "+e._s(JSON.parse('{"status":0,"data":[{"label":"北京","value":"Beijing"},{"label":"上海","value":"Shanghai"},{"label":"广州","value":"Guangzhou"},{"label":"深圳","value":"Shenzhen"}]}'))+"\n                        ")]),e._v(" "),n("p",[e._v("通过requestInterceptor拦截数据，进一步处理后变为：")]),e._v(" "),n("i-code",[e._v("\n                            "+e._s(JSON.parse('{"status":0,"data":[{"label":"我爱北京","value":"Beijing"},{"label":"我爱上海","value":"Shanghai"},{"label":"我爱广州","value":"Guangzhou"},{"label":"我爱深圳","value":"Shenzhen"}]}'))+"\n                        ")])],1)]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.api.code))])],1)],1)])])}),[],!1,null,null,null).exports;t.default=h},840:function(e,t,n){"use strict";n.r(t);var a=n(708),o=n(709),l=n(701),d=n(700),s={},i=[{title:"姓名",key:"name"},{title:"年龄",key:"age"},{title:"性别",key:"gender"},{title:"出生日期",key:"birthday"},{title:"地址",key:"address"},{title:"操作",slot:"action"}],r=[{name:"王小明",age:18,gender:"男",birthday:"1999-2-21",address:"北京市朝阳区芍药居"},{name:"张小刚",age:25,gender:"男",birthday:"1992-1-23",address:"北京市海淀区西二旗"},{name:"李小红",age:30,gender:"女",birthday:"1987-11-10",address:"上海市浦东新区世纪大道"},{name:"周小伟",age:26,gender:"男",birthday:"1991-10-10",address:"深圳市南山区深南大道"}];s.code='\n<template>\n    <Table :columns="columns" :data="data">\n        <template slot="action" slot-scope="{ row, index }">\n            <Button type="primary" size="small" @click="handleDelete(index, row)">删除</Button>\n        </template>\n    </Table>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            columns: '+JSON.stringify(i)+",\n            data: "+JSON.stringify(r)+"\n        };\n    },\n    methods: {\n        handleDelete(index) {\n            this.$Message.info(JSON.stringify({\n                index\n            }));\n        }\n    }\n};\n<script>\n",s.data={columns:i,data:r};var c={},m=[{title:"姓名",slot:"name"},{title:"年龄",key:"age"},{title:"性别",key:"gender"},{title:"出生日期",key:"birthday"},{title:"地址",key:"address"},{title:"操作",slot:"action"}];c.code='\n<template>\n    <Table :columns="columns" :data="data">\n        <template\n            slot="name"\n            slot-scope="{ row }"\n        >\n            <Input v-model="row.name" />\n        </template>\n        <template slot="action" slot-scope="{ row, index }">\n            <Button type="primary" size="small" @click="handleSave(index, row)">保存</Button>\n        </template>\n    </Table>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            columns: '+JSON.stringify(m)+",\n            data: "+JSON.stringify(r)+"\n        };\n    },\n    methods: {\n        handleSave(index, data) {\n            this.$Message.info(JSON.stringify({\n                index,\n                data\n            })});\n        }\n    }\n};\n<script>\n",c.data={columns:m,data:r};var p={},u=[{title:"姓名",slot:"name"},{title:"年龄",key:"age"},{title:"性别",key:"gender"},{title:"出生日期",key:"birthday"},{title:"地址",key:"address"},{title:"操作",slot:"action"}],v={type:"Input",model:"name",placeholder:"请输入用户名",rules:[{type:"string",required:!0,pattern:/^[\u4e00-\u9fa5]+$/,message:"请输入中文姓名"}]},h={type:"Button",subtype:"primary",text:"保存",action:{type:"event",name:"save"}};p.code='\n<template>\n    <Table :columns="columns" :data="data">\n        <template slot="name">\n            <FieldGenerator\n                :field="inputField"\n            />\n        </template>\n        <template slot="action" slot-scope="{ row, index }">\n            <FieldGenerator\n                :field="buttonField"\n                @on-button-event="handleButtonEvent($event, index, row)"\n            />\n        </template>\n    </Table>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            columns: '+JSON.stringify(u)+",\n            data: "+JSON.stringify(r)+",\n            inputField: "+JSON.stringify(v)+",\n            buttonField: "+JSON.stringify(h)+"\n        };\n    },\n    methods: {\n        handleButtonEvent({name}, index, data) {\n            // eslint-disable-next-line no-console\n            switch (name) {\n                case 'save':\n                    this.$Message.info(JSON.stringify({\n                        index,\n                        data\n                    }));\n                    break;\n                case 'delete':\n                    this.handleDynamicFormDel(index);\n                    break;\n            }\n\n        },\n    }\n};\n<script>\n",p.data={columns:u,data:r,inputField:v,buttonField:h};var f={},g=[{title:"姓名",slot:"name",formField:{type:"Input",model:"name",placeholder:"请输入用户名",rules:[{type:"string",required:!0,pattern:/^[\u4e00-\u9fa5]+$/,message:"请输入中文姓名"}]}},{title:"年龄",key:"age"},{title:"性别",key:"gender"},{title:"出生日期",key:"birthday"},{title:"地址",key:"address"},{title:"操作",slot:"action",formField:{type:"Button",subtype:"primary",text:"保存",action:{type:"event",name:"save"}}}];f.code='\n<template>\n    <Table :columns="columns" :data="data">\n        <template\n            v-for="column in columns"\n            :slot="column.slot"\n            slot-scope="{ row, index }"\n        >\n            <Form\n                :key="column.slot"\n\n                :model="row"\n            >\n                <FieldGenerator\n                    :field="column.formField"\n                    @on-button-event="handleButtonEvent($event, index, row)"\n                />\n            </Form>\n        </template>\n    </Table>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            columns: '+JSON.stringify(g)+",\n            data: "+JSON.stringify(r)+"\n        };\n    },\n    methods: {\n        handleSave(index, data) {\n            this.$Message.info(JSON.stringify({\n                index,\n                data\n            })});\n        }\n    }\n};\n<script>\n",f.data={columns:g,data:r};var y={};y.code='\n<template>\n    <Table :columns="columns" :data="data">\n        <template\n            v-for="column in columns"\n            :slot="column.slot"\n            slot-scope="{ row, index }"\n        >\n            <Form\n                :key="column.slot"\n\n                :model="row"\n            >\n                <FieldGenerator\n                    :field="column.formField"\n                    @on-button-event="handleButtonEvent($event, index, row)"\n                />\n            </Form>\n        </template>\n    </Table>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            columns: '+JSON.stringify(g)+",\n            data: "+JSON.stringify(r)+"\n        };\n    },\n    methods: {\n        handleSave(index, data) {\n            this.$Message.info(JSON.stringify({\n                index,\n                data\n            })});\n        }\n    }\n};\n<script>\n",y.data={columns:[{title:"姓名",slot:"name",formField:{type:"Input",model:"name",placeholder:"请输入用户名",rules:[{type:"string",required:!0,pattern:/^[\u4e00-\u9fa5]+$/,message:"请输入中文姓名"}]}},{title:"年龄",slot:"age",formField:{type:"InputNumber",model:"age",placeholder:"请输入年龄",required:!0,max:150,min:0}},{title:"性别",slot:"gender",formField:{type:"Select",model:"gender",placeholder:"请输入性别",required:!0,options:[{label:"男",value:"男"},{label:"女",value:"女"},{label:"保密",value:"保密"}]}},{title:"出生日期",slot:"birthday",formField:{type:"DatePicker",subtype:"date",model:"birthday",placeholder:"请输入出生日期",required:!0}},{title:"地址",slot:"address",formField:{type:"Input",model:"address",placeholder:"请输入地址",required:!0}},{title:"操作",slot:"action",formField:{type:"Button",subtype:"primary",text:"保存",action:{type:"event",name:"save"}}}],data:r};var _={},b=[{title:"姓名",slot:"name",formFields:[{type:"Input",model:"name",placeholder:"请输入用户名",rules:[{type:"string",required:!0,pattern:/^[\u4e00-\u9fa5]+$/,message:"请输入中文姓名"}]}]},{title:"年龄",slot:"age",formFields:[{type:"InputNumber",model:"age",placeholder:"请输入年龄",required:!0,max:150,min:0}]},{title:"性别",slot:"gender",formFields:[{type:"Select",model:"gender",placeholder:"请输入性别",required:!0,options:[{label:"男",value:"男"},{label:"女",value:"女"},{label:"保密",value:"保密"}]}]},{title:"出生日期",slot:"birthday",formFields:[{type:"DatePicker",subtype:"date",model:"birthday",placeholder:"请输入出生日期",required:!0}]},{title:"地址",slot:"address",formFields:[{type:"Input",model:"address",placeholder:"请输入地址",required:!0,showOn:{gender:[{required:!0,type:"enum",enum:["男"]}]}},{type:"Text",model:"address",showOn:{gender:[{required:!0,type:"enum",enum:["女"]}]}}]},{title:"操作",slot:"action",formFields:[{type:"Button",subtype:"primary",text:"保存",action:{type:"event",name:"save"}}]}];_.code='\n<template>\n    <Table :columns="columns" :data="data">\n        <template\n            v-for="column in columns"\n            :slot="column.slot"\n            slot-scope="{ row, index }"\n        >\n            <Form\n                :key="column.slot"\n\n                :model="row"\n            >\n                <FieldGenerator\n                    v-for="field in column.formFields"\n                    :key="field.name"\n                    :field="field"\n                    @on-button-event="handleButtonEvent($event, index, row)"\n                />\n            </Form>\n        </template>\n    </Table>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            columns: '+JSON.stringify(b)+",\n            data: "+JSON.stringify(r)+"\n        };\n    },\n    methods: {\n        handleSave(index, data) {\n            this.$Message.info(JSON.stringify({\n                index,\n                data\n            })});\n        }\n    }\n};\n<script>\n",_.data={columns:b,data:r};var x={},w=[{title:"姓名",slot:"name",formFields:[{type:"Input",model:"name",placeholder:"请输入用户名",rules:[{type:"string",required:!0,pattern:/^[\u4e00-\u9fa5]+$/,message:"请输入中文姓名"}]}]},{title:"年龄",slot:"age",formFields:[{type:"InputNumber",model:"age",placeholder:"请输入年龄",required:!0,max:150,min:0}]},{title:"性别",slot:"gender",formFields:[{type:"Select",model:"gender",placeholder:"请输入性别",required:!0,options:[{label:"男",value:"男"},{label:"女",value:"女"},{label:"保密",value:"保密"}]}]},{title:"出生日期",slot:"birthday",formFields:[{type:"DatePicker",subtype:"date",model:"birthday",placeholder:"请输入出生日期",required:!0}]},{title:"地址",slot:"address",formFields:[{type:"Text",model:"gender",placeholder:"请输入地址",required:!0}]},{title:"操作",slot:"action",formFields:[{type:"Button",subtype:"primary",text:"删除",action:{type:"event",name:"delete"}}]}];x.code='\n<template>\n    <div class="demo-header">\n        <Button type="primary" @click="handleDynamicFormAdd">添加</Button>\n    </div>\n    <Table :columns="columns" :data="data">\n        <template\n            v-for="column in code.dynamicForm.data.columns"\n            :slot="column.slot"\n            slot-scope="{ row, index }"\n        >\n            <Form\n                :key="column.slot"\n                ref="dynamicForm"\n                :model="row"\n            >\n                <FieldGenerator\n                    v-for="field in column.formFields"\n                    :key="field.name"\n                    :field="field"\n                    @on-button-event="handleButtonEvent($event, index, row)"\n                />\n            </Form>\n        </template>\n    </Table>\n    <div class="demo-actions">\n        <Button type="primary" @click="handleDynamicFormSubmit">提交</Button>\n    </div>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            columns: '+JSON.stringify(w)+",\n            data: "+JSON.stringify(r)+"\n        };\n    },\n    methods: {\n        handleSave(index, data) {\n            this.$Message.info(JSON.stringify({\n                index,\n                data\n            })});\n        }\n    }\n};\n<script>\n",x.data={columns:w,data:r};var F={table:s,input:c,fieldGeneratorInputAndButton:p,configInputAndButton:f,configMore:y,showOnHiddenOn:_,dynamicForm:x},S=[{path:"/form-editable-table",img:n(774),title:"可编辑表格",desc:"表格展示使得数据清晰、明了，直接在表格中进行编辑，能够大大提高编辑效率。"}],C={components:{iArticle:a.a,inAnchor:o.a,Demo:l.a,iCode:d.a},data:()=>({templates:S,code:F,dynamicFormData:JSON.parse(JSON.stringify(F.dynamicForm.data.data))}),methods:{handleDelete(e){this.$Message.info(JSON.stringify({index:e}))},handleSave(e,t){this.$Message.info(JSON.stringify({index:e,data:t}))},handleButtonEvent(e,t,n){var{name:a}=e;switch(a){case"save":this.$Message.info(JSON.stringify({index:t,data:n}));break;case"delete":this.handleDynamicFormDel(t)}},handleDynamicFormAdd(){var e=this.getDynamicFormData();e.push({}),this.dynamicFormData=e},handleDynamicFormDel(e){this.dynamicFormData.splice(e,1)},handleDynamicFormSubmit(){this.$Message.info(JSON.stringify({data:this.getDynamicFormData()}))},getDynamicFormData(){var e=[];return this.$refs.dynamicForm.forEach(t=>{e[t.model._index]=t.model}),e}}},k=(n(775),n(1)),O=Object(k.a)(C,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("i-article",{staticClass:"doc-powerful-f"},[n("article",[n("h1",[e._v("配置表格内的表单控件")]),e._v(" "),n("p",[e._v("在开发中，输入并不总是以一个完整的表单形式出现，在复杂场景下，输入控件会内嵌至表格中，形成更复杂的如表格行内编辑。")]),e._v(" "),n("div",{staticClass:"doc-powerful-f-templates"},e._l(e.templates,(function(t,a){return n("Card",{key:a,staticClass:"doc-powerful-f-templates-card"},[n("router-link",{attrs:{to:t.path}},[n("div",{staticClass:"doc-powerful-f-templates-card-img"},[n("img",{attrs:{src:t.img,alt:t.title}})]),e._v(" "),n("div",{staticClass:"doc-powerful-f-templates-card-content"},[n("h3",[e._v(e._s(t.title))]),e._v(" "),n("p",[e._v("\n                            "+e._s(t.desc)+"\n                        ")])])])],1)})),1),e._v(" "),n("p",[e._v("\n            对于这样的场景，如何实现表单控件恰当地内置到表格中，在开发中通常是一个很头疼问题，但是这在我们的开发中却常常遇到。\n            本文接下来讲向你展示，如何使用FormGenerator中内置的"),n("strong",[e._v("FieldGenerator")]),e._v("组件，通过JSON配置及少量的模板代码，来实现上面的需求。\n        ")]),e._v(" "),n("p",[e._v("本节的要点是："),n("strong",[e._v("FieldGenerator的灵活性使得其可以和其他组件进行搭配来实现复杂场景下的表单输入。")])]),e._v(" "),n("inAnchor",{attrs:{title:"一、先创建一个表格【iView原生用法】",h2:""}}),e._v(" "),n("Demo",{attrs:{title:"先创建一个表格",vertical:""}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("Table",{attrs:{columns:e.code.table.data.columns,data:e.code.table.data.data},scopedSlots:e._u([{key:"action",fn:function(t){var a=t.row,o=t.index;return[n("Button",{attrs:{type:"primary",size:"small"},on:{click:function(t){return e.handleDelete(o,a)}}},[e._v("删除")])]}}])})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("使用iView Table 组件，很容易实现一个带有删除等操作的表格。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.table.code))])],1),e._v(" "),n("inAnchor",{attrs:{title:"二、然后表格中内置一个Input和一个Button【iView原生用法】",h2:""}}),e._v(" "),n("Demo",{attrs:{title:"表格中内置一个Input和一个Button",vertical:""}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("Table",{attrs:{columns:e.code.input.data.columns,data:e.code.input.data.data},scopedSlots:e._u([{key:"name",fn:function(t){var a=t.row;return[n("Form",{attrs:{model:a}},[n("FormItem",[n("Input",{attrs:{placeholder:"请输入姓名"},model:{value:a.name,callback:function(t){e.$set(a,"name",t)},expression:"row.name"}})],1)],1)]}},{key:"action",fn:function(t){var a=t.row,o=t.index;return[n("Form",{attrs:{model:a}},[n("Button",{attrs:{type:"primary",size:"small"},on:{click:function(t){return e.handleSave(o,a)}}},[e._v("保存")])],1)]}}])})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("在iView Table组件中，置入Input和Button，来实现编辑并保存的功能。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.input.code))])],1),e._v(" "),n("inAnchor",{attrs:{title:"三、使用FieldGenerator来实现Input和Button【该Demo仅演示过程，不推荐项目中使用】",h2:""}}),e._v(" "),n("Demo",{attrs:{title:"使用FieldGenerator来实现Input和Button",vertical:""}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("Table",{attrs:{columns:e.code.fieldGeneratorInputAndButton.data.columns,data:e.code.fieldGeneratorInputAndButton.data.data},scopedSlots:e._u([{key:"name",fn:function(t){var a=t.row;return[n("Form",{attrs:{model:a}},[n("FieldGenerator",{attrs:{field:e.code.fieldGeneratorInputAndButton.data.inputField}})],1)]}},{key:"action",fn:function(t){var a=t.row,o=t.index;return[n("Form",{attrs:{model:a}},[n("FieldGenerator",{attrs:{field:e.code.fieldGeneratorInputAndButton.data.buttonField},on:{"on-button-event":function(t){return e.handleButtonEvent(t,o,a)}}})],1)]}}])})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("通过FieldGenerator组件来代替直接置入Input和Button，这个Demo仅用来展示代替的过程，下一个Demo将展示抽离Input和Button的配置。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.fieldGeneratorInputAndButton.code))])],1),e._v(" "),n("inAnchor",{attrs:{title:"四、将Input和Button的配置进行抽离",h2:""}}),e._v(" "),n("Demo",{attrs:{title:"将Input和Button的配置进行抽离",vertical:""}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("Table",{attrs:{columns:e.code.configInputAndButton.data.columns,data:e.code.configInputAndButton.data.data},scopedSlots:e._u([e._l(e.code.configInputAndButton.data.columns,(function(t){return{key:t.slot,fn:function(a){var o=a.row,l=a.index;return[n("Form",{key:t.slot,attrs:{model:o}},[n("FieldGenerator",{attrs:{field:t.formField},on:{"on-button-event":function(t){return e.handleButtonEvent(t,l,o)}}})],1)]}}}))],null,!0)})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("将Input和Button的配置抽离到columns里面，通过循环slot来渲染。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.configInputAndButton.code))])],1),e._v(" "),n("inAnchor",{attrs:{title:"五、配置更多的输入控件",h2:""}}),e._v(" "),n("Demo",{attrs:{title:"配置更多的输入控件",vertical:""}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("Table",{attrs:{columns:e.code.configMore.data.columns,data:e.code.configMore.data.data},scopedSlots:e._u([e._l(e.code.configMore.data.columns,(function(t){return{key:t.slot,fn:function(a){var o=a.row,l=a.index;return[n("Form",{key:t.slot,attrs:{model:o}},[n("FieldGenerator",{attrs:{field:t.formField},on:{"on-button-event":function(t){return e.handleButtonEvent(t,l,o)}}})],1)]}}}))],null,!0)})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("通过在表格中置入更多类型的输入控件。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.configMore.code))])],1),e._v(" "),n("inAnchor",{attrs:{title:"六、表格中控件的展示和隐藏",h2:""}}),e._v(" "),n("p",[e._v("在需要时，我们可以为每个单元格配置多个控件。通过showOn和hiddenOn可以实现对单元格展示控件进行区别控制。")]),e._v(" "),n("Demo",{attrs:{title:"表格中控件的展示和隐藏",vertical:""}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("Table",{attrs:{columns:e.code.showOnHiddenOn.data.columns,data:e.code.showOnHiddenOn.data.data},scopedSlots:e._u([e._l(e.code.showOnHiddenOn.data.columns,(function(t){return{key:t.slot,fn:function(a){var o=a.row,l=a.index;return[n("Form",{key:t.slot,attrs:{model:o}},e._l(t.formFields,(function(t){return n("FieldGenerator",{key:t.name,attrs:{field:t},on:{"on-button-event":function(t){return e.handleButtonEvent(t,l,o)}}})})),1)]}}}))],null,!0)})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("性别为男时，地址可编辑；性别为女时，地址不可编辑；")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.showOnHiddenOn.code))])],1),e._v(" "),n("inAnchor",{attrs:{title:"七、扩展场景-动态表单批量校验",h2:""}}),e._v(" "),n("p",[e._v("有时候，我们需要同时添加多项，然后批量校验和提交。")]),e._v(" "),n("Demo",{attrs:{title:"扩展场景-动态表单批量校验",vertical:""}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("div",{staticClass:"demo-header"},[n("Button",{attrs:{type:"primary"},on:{click:e.handleDynamicFormAdd}},[e._v("添加")])],1),e._v(" "),n("Table",{attrs:{columns:e.code.dynamicForm.data.columns,data:e.dynamicFormData},scopedSlots:e._u([e._l(e.code.dynamicForm.data.columns,(function(t){return{key:t.slot,fn:function(a){var o=a.row,l=a.index;return[n("Form",{key:t.slot,ref:"dynamicForm",refInFor:!0,attrs:{model:o}},e._l(t.formFields,(function(t){return n("FieldGenerator",{key:t.name,attrs:{field:t},on:{"on-button-event":function(t){return e.handleButtonEvent(t,l,o)}}})})),1)]}}}))],null,!0)}),e._v(" "),n("div",{staticClass:"demo-actions"},[n("Button",{attrs:{type:"primary"},on:{click:e.handleDynamicFormSubmit}},[e._v("提交")])],1)],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",{attrs:{type:"primary"}},[e._v("使用FieldGenerator处理动态添加子项，批量校验和提交也很简单。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.dynamicForm.code))])],1)],1)])}),[],!1,null,null,null).exports;t.default=O},854:function(e,t,n){"use strict";n.r(t);var a=n(708),o=n(709),l={components:{iArticle:a.a,inAnchor:o.a},data:()=>({})},d=n(1),s=Object(d.a)(l,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("i-article",[n("article",[n("h1",[e._v("选择合适的组件类型")]),e._v(" "),n("p",[e._v("提供各种相似场景组件的速查表和场景建议。")]),e._v(" "),n("div",{staticClass:"api"},[n("inAnchor",{attrs:{title:"选项选择类",h2:""}}),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("组件类型")]),e._v(" "),n("th",[e._v("适用场景")]),e._v(" "),n("th",[e._v("推荐场景")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("Switch")]),e._v(" "),n("td",[e._v("开关选择")]),e._v(" "),n("td",[e._v("只有两个选项，且为对立面")])]),e._v(" "),n("tr",[n("td",[e._v("Radio")]),e._v(" "),n("td",[e._v("直接单选")]),e._v(" "),n("td",[e._v("选择项少于6个，直接展示所有选项")])]),e._v(" "),n("tr",[n("td",[e._v("Checkbox")]),e._v(" "),n("td",[e._v("直接多选")]),e._v(" "),n("td",[e._v("选择项少于6个，直接展示所有选项")])]),e._v(" "),n("tr",[n("td",[e._v("CheckboxCard")]),e._v(" "),n("td",[e._v("卡片多选")]),e._v(" "),n("td",[e._v("多选，且需展示图文信息时")])]),e._v(" "),n("tr",[n("td",[e._v("Select")]),e._v(" "),n("td",[e._v("先下拉，再选择")]),e._v(" "),n("td",[e._v("选项大于等于6个")])]),e._v(" "),n("tr",[n("td",[e._v("LogicSelect")]),e._v(" "),n("td",[e._v("逻辑选择")]),e._v(" "),n("td",[e._v("需要进行大于、小于、等于、区间等逻辑的选择时")])]),e._v(" "),n("tr",[n("td",[e._v("Cascader")]),e._v(" "),n("td",[e._v("层级较多时的选择")]),e._v(" "),n("td",[e._v("多级单选")])]),e._v(" "),n("tr",[n("td",[e._v("Tree")]),e._v(" "),n("td",[e._v("层级较多时的选择")]),e._v(" "),n("td",[e._v("多级多选")])]),e._v(" "),n("tr",[n("td",[e._v("TableSelect")]),e._v(" "),n("td",[e._v("表格选择")]),e._v(" "),n("td",[e._v("有较多的描述信息")])]),e._v(" "),n("tr",[n("td",[e._v("Carousel")]),e._v(" "),n("td",[e._v("走马灯")]),e._v(" "),n("td",[e._v("可通过横划来进行单选，适用于图片视频媒体的单选")])])])])],1)])])}),[],!1,null,null,null).exports;t.default=s},856:function(e,t,n){"use strict";n.r(t);var a=n(708),o=n(709),l=n(700),d=n(701),s=n(730),i={components:{iArticle:a.a,inAnchor:o.a,iCode:l.a,Demo:d.a},data:()=>({code:s.a}),methods:{handleFieldChange(){}}},r=n(1),c=Object(r.a)(i,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("i-article",[n("article",[n("h1",[e._v("控件的可见性")]),e._v(" "),n("inAnchor",{attrs:{title:"概述",h2:""}}),e._v(" "),n("p",[e._v("在某些业务场景中，我们常常会需要根据某些字段来判断元素的显示隐藏(比如：权限控制),利用showOn和hiddenOn两个api，可以很好的实现这一点。我们可以把控制显示或者隐藏的字段放在表单的model中，或者在页面全局变量paramContainer中使用。")]),e._v(" "),n("div",{staticClass:"api"},[n("inAnchor",{attrs:{title:"配置快速查询",h2:""}}),e._v(" "),n("p",[e._v("showOn&hiddenOn基于async-validator实现的数据验证，具体规则形式请参考"),n("a",{attrs:{href:"https://github.com/yiminghe/async-validator",target:"_blank"}},[n("i",{staticClass:"ivu-icon ivu-icon-social-github"}),e._v(" async-validator")]),e._v("。")]),e._v(" "),n("inAnchor",{attrs:{title:"代码示例",h2:""}}),e._v(" "),n("Demo",{attrs:{title:"基础用法（表单控制）"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.simple.data.fields,model:e.code.simple.data.model}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("通过设置hiddenOn和showOn来控制表单子组件的显示和隐藏。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.simple.code))])],1),e._v(" "),n("Demo",{attrs:{title:"外部变量控制"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("RadioGroup",{attrs:{size:"small"},model:{value:e.code.params.data.paramsContainer.isShow,callback:function(t){e.$set(e.code.params.data.paramsContainer,"isShow",t)},expression:"code.params.data.paramsContainer.isShow"}},[n("Radio",{attrs:{label:0}},[e._v(" 隐藏 ")]),e._v(" "),n("Radio",{attrs:{label:1}},[e._v(" 展示 ")])],1),e._v(" "),n("FormGenerator",{attrs:{fields:e.code.params.data.paramsFields,model:e.code.params.data.paramsModel,"params-container":e.code.params.data.paramsContainer}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("在某些场景下，控制元素显示（隐藏）的字段可能不在表单中返回，这时，我们就可以使用paramContainer来实现元素的显示（隐藏）这一功能，只需要把变量放到paramContainer中就可以了。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.params.code))])],1),e._v(" "),n("Demo",{attrs:{title:"两者共存"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.bothConfig.data.bothFileds,model:e.code.bothConfig.data.bothModels}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("同一个表单元素同时设置showOn,hiddenOn时，同时满足展示的时候才会展示。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.bothConfig.code))])],1),e._v(" "),n("Demo",{attrs:{title:"复杂规则"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.validatorConfig.data.validatorFileds,model:e.code.validatorConfig.data.validatorModels}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("性别为女性，并且年龄小于14岁的，需要输入姓名。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.validatorConfig.code))])],1)],1)],1)])}),[],!1,null,null,null).exports;t.default=c},857:function(e,t,n){"use strict";n.r(t);var a=n(708),o=n(709),l=n(700),d=n(701),s=n(731),i={components:{iArticle:a.a,inAnchor:o.a,iCode:l.a,Demo:d.a},data:()=>({code:s.a}),methods:{handleFieldChange(){}}},r=n(1),c=Object(r.a)(i,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("i-article",[n("article",[n("h1",[e._v("表单校验")]),e._v(" "),n("inAnchor",{attrs:{title:"概述",h2:""}}),e._v(" "),n("p",[e._v("在某些提交表单场景中，我们常常会需要进行表单的验证以引导用户填入符合规则的值，这时我们就需要在提交之前告知用户应该以什么样的规则填入表单。")]),e._v(" "),n("div",{staticClass:"api"},[n("inAnchor",{attrs:{title:"配置快速查询",h2:""}}),e._v(" "),n("p",[e._v("基于async-validator实现的数据验证，具体规则形式请参考"),n("a",{attrs:{href:"https://github.com/yiminghe/async-validator",target:"_blank"}},[n("i",{staticClass:"ivu-icon ivu-icon-social-github"}),e._v(" async-validator")]),e._v("。")]),e._v(" "),n("alert",[e._v("如果发现 async-validator 的行为不符合预期，请检查你的iview及其中引入的 async-validator 的版本。")]),e._v(" "),n("inAnchor",{attrs:{title:"代码示例",h2:""}}),e._v(" "),n("Demo",{attrs:{title:"基础用法"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.validateForm.data.fields,model:e.code.validateForm.data.model,options:e.code.validateForm.data.options}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"}),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.validateForm.code))])],1),e._v(" "),n("Demo",{attrs:{title:"required"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.required.data.fields,model:e.code.required.data.model}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("通过设置required属性增加表单必填验证。提示消息为label标签值+不可为空")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.required.code))])],1),e._v(" "),n("Demo",{attrs:{title:"rules"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.rules.data.paramsRules,model:e.code.rules.data.paramsModel}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("在某些场景下，需要更明确的告知用户填入什么样的信息，这时可以自定义验证规则，通过type定义输入类型，通过message定义提示用户信息。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.rules.code))])],1),e._v(" "),n("Demo",{attrs:{title:"enum"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.enumConfig.data.enumFileds,model:e.code.enumConfig.data.enumModels}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("type为enum时可以定义用户输入值中要包含的信息")]),e._v(" "),n("alert",[e._v("iview内置的 "),n("code",[e._v("async-validator")]),e._v(" 的低版本中，enum值为number类型时存在bug")])],1),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.enumConfig.code))])],1),e._v(" "),n("Demo",{attrs:{title:"复杂规则"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.validatorConfig.data.validatorFileds,model:e.code.validatorConfig.data.validatorModels}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("如果有些值验证比较复杂可以通过自定义函数来实现，通过定义validator函数才实现自定义控制。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.validatorConfig.code))])],1),e._v(" "),n("Demo",{attrs:{title:"异步复杂规则"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.asyncValidatorConfig.data.asyncValidatorFileds,model:e.code.asyncValidatorConfig.data.asyncValidatorModels}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("如果有些值验证比较复杂可以通过自定义函数来实现，通过定义asyncValidator函数才实现自定义控制。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.asyncValidatorConfig.code))])],1),e._v(" "),n("inAnchor",{attrs:{title:"提交按钮也会走验证逻辑",h2:""}}),e._v(" "),n("Demo",{attrs:{title:"提交按钮验证规则"}},[n("div",{attrs:{slot:"demo"},slot:"demo"},[n("FormGenerator",{attrs:{fields:e.code.submitConfig.data.submitFileds,model:e.code.submitConfig.data.submitModels}})],1),e._v(" "),n("div",{attrs:{slot:"desc"},slot:"desc"},[n("p",[e._v("当通知field设置Submit类型的组件时，这个组件会自带提交验证绑定model值的功能，如果不符合规则会阻止提交。")])]),e._v(" "),n("i-code",{attrs:{slot:"code",lang:"html"},slot:"code"},[e._v(e._s(e.code.submitConfig.code))])],1)],1)],1)])}),[],!1,null,null,null).exports;t.default=c}}]);